#ifndef __STR_FUNCS_H__
#define __STR_FUNCS_H__


/// @brief поиск первого вхождения в строку символа из указанного множества
/// @param *str – указатель на строку, в которой ведется поиск (in)
/// @param *sym – указатель на строку с набором искомых символов (in)
/// @return NULL – если не один символ из строки sym не найден в строке str. Указатель на первый найденный в строке str символ из строки sym.
char *my_strpbrk(const char *str, const char *sym);

/// @brief определение максимальной длины начального участка строки, содержащего только указанные символы
/// @param *str – указатель на строку, в которой ведется поиск (in)
/// @param *sym – указатель на строку с набором символов, которые должны входить в участок строки str (in)
/// @return длина начального участка строки, содержащая только символы, указанные в аргументе sym
size_t my_strspn(const char *str, const char *sym);


/// @brief определение максимальной длины начального участка строки, не содержащего указанные символы
/// @param *str – указатель на строку, в которой ведется поиск (in)
/// @param *sym – указатель на строку с набором символов, которые не должны входить в участок строки str (in)
/// @return длина начального участка строки, не содержащая символы, указанные в аргументе sym
size_t my_strcspn(const char *str, const char *sym);


/// @brief поиск первого вхождения символа в строку
/// @param *str – указатель на строку, в которой будет осуществляться поиск (in)
/// @param ch – код искомого символа (in)
/// @return указатель на искомый символ, если он найден в строке str, иначе NULL
char *my_strchr(const char *str, int ch);


/// @brief поиск последнего вхождения символа в строку
/// @param *str – указатель на строку, в которой будет осуществляться поиск (in)
/// @param ch – код искомого символа (in)
/// @return указатель на искомый символ, если он найден в строке str, иначе NULL
char *my_strrchr(const char *str, int ch);


#endif
